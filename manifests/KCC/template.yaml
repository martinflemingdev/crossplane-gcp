
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMWorkloadIdentityPool
metadata:
  name: iamwipp-dep-aws
spec:
  projectRef:
    # Replace ${PROJECT_ID?} with your project id
    external: "projects/${PROJECT_ID?}"
  location: "global"
  displayName: "sample-pool"
  description: "A sample workload identity pool using a newly created project"
  disabled: false
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMWorkloadIdentityPoolProvider
metadata:
  name: iamwipp-sample-aws
spec:
  projectRef:
    # Replace ${PROJECT_ID?} with your project id
    external: "projects/${PROJECT_ID?}"
  location: "global"
  workloadIdentityPoolRef:
    name: "iamwipp-dep-aws"
  displayName: "sample-provider"
  description: "A sample workload identity pool provider using aws"
  disabled: false
  attributeMapping:
    # google.subject: "true" # ?? we had this as assertion.arn
    google.subject: assertion.arn
    attribute.aws_role: assertion.arn.contains('assumed-role') ? assertion.arn.extract('{account_arn}assumed-role/') + 'assumed-role/' + assertion.arn.extract('assumed-role/{role_name}/') : assertion.arn
  attributeCondition: "true"
  aws:
    accountId: "999999999999"
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: iampolicymember-sample-projlevel
spec:
  member: principalSet://iam.googleapis.com/projects/workloadidfederation/locations/global/workloadIdentityPools/youtube-demo/providers/youtube-demo-provider/attribute.aws_role/arn:aws:iam::011882408883:role/gcp-youtube-demo
  role: roles/storage.admin
  resourceRef:
    kind: Project
    external: projects/${PROJECT_ID?}
---
   #      principalSet://iam.googleapis.com/projects/${PROJECT_ID}/locations/global/workloadIdentityPools/${POOL_NAME}/attribute.aws_role/arn:aws:iam::${AWS_ACCOUNT_ID}:role/${ROLE_NAME}
# principalSet://iam.googleapis.com/projects/workloadidfederation/locations/global/workloadIdentityPools/youtube-demo/providers/youtube-demo-provider/attribute.aws_role/arn:aws:iam::011882408883:role/gcp-youtube-demo