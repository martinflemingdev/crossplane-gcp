apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: bucketobjects.storage.gcp.upbound.io
      version: v1
  creationTimestamp: "2024-07-18T18:16:59Z"
  generation: 1
  name: bucketobjects.storage.gcp.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-gcp-storage-58288c1e38fe
    uid: 36e90a91-4b06-4f8d-84d0-69e0378ab782
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-gcp-storage
    uid: 3ccb6b9c-ae87-4a4a-82a7-19d2ce73df00
  resourceVersion: "3273"
  uid: a926a000-6173-4b7e-9c6e-6c4aa89b5aa0
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzRENDQXNTZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTNNVGd4T0RFMk5UaGFGdzB6Ck5EQTNNVGd4T0RFMk5UaGFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeG43Q0p0MGFJCnZnZGZFSjFpdkVBOHNwZWhxL2lGTDJqK3Y4NU1DakhFbnYwMHVIcHRKd2dwNllTei9lR3JDWEhYVVkyalZPNHAKaGdLdVRhYjVYWnNaeENXblQvWlZ3bFVlcFdhcUtONW1xRFVpaUpoWmZ6QzJxdURZSklLT0M4MHF1b21IdXNWUwo5aXFrRy9KZWhnczZVUUJsaHBIMW5yak5Vc2cvd2Y3UnhDbERiakZxMjY5ZGxFYkdReXdhM2Z6QmF5dUtxU1pRCndlaTBZMzVja2lyUW1MVXU1bHovd3p5alJKbDU5L1cwSFF5MGVpblY2M1FKVzd5dlVNVC9pZzl3dkpJeWduT0MKQ2xwOXZwQzhkS2hHZ3gzTDFIUDBld3FmZFlyTUlxR2Vnb0ZqK0dWQytqWFJvU2xva014WHBOT1RFVzJqWDRGQQpuZkxQL2xoYkkvczFBZ01CQUFHamdhc3dnYWd3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Y3dZRFZSMFJCR3d3YW9JVWNISnZkbWxrWlhJdFoyTncKTFhOMGIzSmhaMldDSm5CeWIzWnBaR1Z5TFdkamNDMXpkRzl5WVdkbExtTnliM056Y0d4aGJtVXRjM2x6ZEdWdApnaXB3Y205MmFXUmxjaTFuWTNBdGMzUnZjbUZuWlM1amNtOXpjM0JzWVc1bExYTjVjM1JsYlM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQU5ZYjI1ZG9tZnV4MjJZdkxrTjBaYTg0dlFJREdGVDVoYlk0UTZieXpJbTkKWEppU3lkOTZ4TXpGZGVOc0NhZW4vU2dwYzNxNWRFMG5FMVhlY2N2Uzl2bzRwakFVM3hjZjUveDZkTUN5UUg1ZQpBbmYvS2hLaFQrVG95R1NyWFZKS01aQzI3VHZac0g0Z1NDNlU1SVBFdFQ1c2pWcEdLSFJvM2VXSThLRjc2WnpVCmZJSmI1aXZHNjdlZ0tRL3gxSUNpN3p1Rjhjb2x4NUlrcThOM3h5WEI2NXVjbStvdFNJTEI4SmR6dTJuK203MFkKcUx4YUJPeDU2ZWZXV2FVdVJFTlgwTEx0REcxMUo2WlQwSFcwa3BOVUFsYzJnVEVCYzFla1hIWVhyM3ZCa2lFOApGOHVWN0kvKzM1SnV4N004UWdUNGdqSmdLVXp2QUczbFFSZHNvZy96QS9FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        service:
          name: provider-gcp-storage
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: storage.gcp.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BucketObject
    listKind: BucketObjectList
    plural: bucketobjects
    singular: bucketobject
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BucketObject is the Schema for the BucketObjects API. Creates
          a new object inside a specified bucket
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BucketObjectSpec defines the desired state of BucketObject
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in storage to populate bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in storage to populate bucket.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cacheControl:
                    description: |-
                      Cache-Control
                      directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
                    type: string
                  content:
                    description: 'Data as string to be uploaded. Must be defined if
                      source is not. Note: The content field is marked as sensitive.
                      To view the raw contents of the object, please define an output.'
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  customerEncryption:
                    description: |-
                      Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
                      Structure is documented below.
                    items:
                      properties:
                        encryptionAlgorithm:
                          description: 'Encryption algorithm. Default: AES256'
                          type: string
                        encryptionKeySecretRef:
                          description: Base64 encoded Customer-Supplied Encryption
                            Key.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - encryptionKeySecretRef
                      type: object
                    type: array
                  detectMd5Hash:
                    description: 'MD5 hash of the data, encoded using base64. This
                      field is not present for composite objects. For more information
                      about using the MD5 hash, see Hashes and ETags: Best Practices.'
                    type: string
                  eventBasedHold:
                    description: Whether an object is under event-based hold. Event-based
                      hold is a way to retain objects until an event occurs, which
                      is signified by the hold's release (i.e. this value is set to
                      false). After being released (set to false), such objects will
                      be subject to bucket-level retention (if any).
                    type: boolean
                  kmsKeyName:
                    description: The resource name of the Cloud KMS key that will
                      be used to encrypt the object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  retention:
                    description: The object retention settings for the object. The
                      retention settings allow an object to be retained until a provided
                      date. Structure is documented below.
                    items:
                      properties:
                        mode:
                          description: The retention policy mode. Either Locked or
                            Unlocked.
                          type: string
                        retainUntilTime:
                          description: The time to retain the object until in RFC
                            3339 format, for example 2012-11-15T16:19:00.094Z.
                          type: string
                      type: object
                    type: array
                  source:
                    description: |-
                      A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: |-
                      The StorageClass of the new bucket object.
                      Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
                      storage class or to a standard class.
                    type: string
                  temporaryHold:
                    description: Whether an object is under temporary hold. While
                      this flag is set to true, the object is protected against deletion
                      and overwrites.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in storage to populate bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in storage to populate bucket.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cacheControl:
                    description: |-
                      Cache-Control
                      directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
                    type: string
                  content:
                    description: 'Data as string to be uploaded. Must be defined if
                      source is not. Note: The content field is marked as sensitive.
                      To view the raw contents of the object, please define an output.'
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  customerEncryption:
                    description: |-
                      Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
                      Structure is documented below.
                    items:
                      properties:
                        encryptionAlgorithm:
                          description: 'Encryption algorithm. Default: AES256'
                          type: string
                      type: object
                    type: array
                  detectMd5Hash:
                    description: 'MD5 hash of the data, encoded using base64. This
                      field is not present for composite objects. For more information
                      about using the MD5 hash, see Hashes and ETags: Best Practices.'
                    type: string
                  eventBasedHold:
                    description: Whether an object is under event-based hold. Event-based
                      hold is a way to retain objects until an event occurs, which
                      is signified by the hold's release (i.e. this value is set to
                      false). After being released (set to false), such objects will
                      be subject to bucket-level retention (if any).
                    type: boolean
                  kmsKeyName:
                    description: The resource name of the Cloud KMS key that will
                      be used to encrypt the object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  retention:
                    description: The object retention settings for the object. The
                      retention settings allow an object to be retained until a provided
                      date. Structure is documented below.
                    items:
                      properties:
                        mode:
                          description: The retention policy mode. Either Locked or
                            Unlocked.
                          type: string
                        retainUntilTime:
                          description: The time to retain the object until in RFC
                            3339 format, for example 2012-11-15T16:19:00.094Z.
                          type: string
                      type: object
                    type: array
                  source:
                    description: |-
                      A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: |-
                      The StorageClass of the new bucket object.
                      Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
                      storage class or to a standard class.
                    type: string
                  temporaryHold:
                    description: Whether an object is under temporary hold. While
                      this flag is set to true, the object is protected against deletion
                      and overwrites.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: BucketObjectStatus defines the observed state of BucketObject.
            properties:
              atProvider:
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  cacheControl:
                    description: |-
                      Cache-Control
                      directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
                    type: string
                  content:
                    description: 'Data as string to be uploaded. Must be defined if
                      source is not. Note: The content field is marked as sensitive.
                      To view the raw contents of the object, please define an output.'
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  crc32c:
                    description: (Computed) Base 64 CRC32 hash of the uploaded data.
                    type: string
                  customerEncryption:
                    description: |-
                      Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
                      Structure is documented below.
                    items:
                      properties:
                        encryptionAlgorithm:
                          description: 'Encryption algorithm. Default: AES256'
                          type: string
                      type: object
                    type: array
                  detectMd5Hash:
                    description: 'MD5 hash of the data, encoded using base64. This
                      field is not present for composite objects. For more information
                      about using the MD5 hash, see Hashes and ETags: Best Practices.'
                    type: string
                  eventBasedHold:
                    description: Whether an object is under event-based hold. Event-based
                      hold is a way to retain objects until an event occurs, which
                      is signified by the hold's release (i.e. this value is set to
                      false). After being released (set to false), such objects will
                      be subject to bucket-level retention (if any).
                    type: boolean
                  id:
                    type: string
                  kmsKeyName:
                    description: The resource name of the Cloud KMS key that will
                      be used to encrypt the object.
                    type: string
                  md5hash:
                    description: (Computed) Base 64 MD5 hash of the uploaded data.
                    type: string
                  mediaLink:
                    description: (Computed) A url reference to download this object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  outputName:
                    description: |-
                      (Computed) The name of the object. Use this field in interpolations with google_storage_object_acl to recreate
                      google_storage_object_acl resources when your google_storage_bucket_object is recreated.
                    type: string
                  retention:
                    description: The object retention settings for the object. The
                      retention settings allow an object to be retained until a provided
                      date. Structure is documented below.
                    items:
                      properties:
                        mode:
                          description: The retention policy mode. Either Locked or
                            Unlocked.
                          type: string
                        retainUntilTime:
                          description: The time to retain the object until in RFC
                            3339 format, for example 2012-11-15T16:19:00.094Z.
                          type: string
                      type: object
                    type: array
                  selfLink:
                    description: (Computed) A url reference to this object.
                    type: string
                  source:
                    description: |-
                      A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: |-
                      The StorageClass of the new bucket object.
                      Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
                      storage class or to a standard class.
                    type: string
                  temporaryHold:
                    description: Whether an object is under temporary hold. While
                      this flag is set to true, the object is protected against deletion
                      and overwrites.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: BucketObject is the Schema for the BucketObjects API. Creates
          a new object inside a specified bucket
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BucketObjectSpec defines the desired state of BucketObject
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in storage to populate bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in storage to populate bucket.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cacheControl:
                    description: |-
                      Cache-Control
                      directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
                    type: string
                  content:
                    description: 'Data as string to be uploaded. Must be defined if
                      source is not. Note: The content field is marked as sensitive.
                      To view the raw contents of the object, please define an output.'
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  customerEncryption:
                    description: |-
                      Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
                      Structure is documented below.
                    properties:
                      encryptionAlgorithm:
                        description: 'Encryption algorithm. Default: AES256'
                        type: string
                      encryptionKeySecretRef:
                        description: Base64 encoded Customer-Supplied Encryption Key.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                    type: object
                  detectMd5Hash:
                    description: 'MD5 hash of the data, encoded using base64. This
                      field is not present for composite objects. For more information
                      about using the MD5 hash, see Hashes and ETags: Best Practices.'
                    type: string
                  eventBasedHold:
                    description: Whether an object is under event-based hold. Event-based
                      hold is a way to retain objects until an event occurs, which
                      is signified by the hold's release (i.e. this value is set to
                      false). After being released (set to false), such objects will
                      be subject to bucket-level retention (if any).
                    type: boolean
                  kmsKeyName:
                    description: The resource name of the Cloud KMS key that will
                      be used to encrypt the object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  retention:
                    description: The object retention settings for the object. The
                      retention settings allow an object to be retained until a provided
                      date. Structure is documented below.
                    properties:
                      mode:
                        description: The retention policy mode. Either Locked or Unlocked.
                        type: string
                      retainUntilTime:
                        description: The time to retain the object until in RFC 3339
                          format, for example 2012-11-15T16:19:00.094Z.
                        type: string
                    type: object
                  source:
                    description: |-
                      A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: |-
                      The StorageClass of the new bucket object.
                      Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
                      storage class or to a standard class.
                    type: string
                  temporaryHold:
                    description: Whether an object is under temporary hold. While
                      this flag is set to true, the object is protected against deletion
                      and overwrites.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in storage to populate bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in storage to populate bucket.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cacheControl:
                    description: |-
                      Cache-Control
                      directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
                    type: string
                  content:
                    description: 'Data as string to be uploaded. Must be defined if
                      source is not. Note: The content field is marked as sensitive.
                      To view the raw contents of the object, please define an output.'
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  customerEncryption:
                    description: |-
                      Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
                      Structure is documented below.
                    properties:
                      encryptionAlgorithm:
                        description: 'Encryption algorithm. Default: AES256'
                        type: string
                      encryptionKeySecretRef:
                        description: Base64 encoded Customer-Supplied Encryption Key.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                    required:
                    - encryptionKeySecretRef
                    type: object
                  detectMd5Hash:
                    description: 'MD5 hash of the data, encoded using base64. This
                      field is not present for composite objects. For more information
                      about using the MD5 hash, see Hashes and ETags: Best Practices.'
                    type: string
                  eventBasedHold:
                    description: Whether an object is under event-based hold. Event-based
                      hold is a way to retain objects until an event occurs, which
                      is signified by the hold's release (i.e. this value is set to
                      false). After being released (set to false), such objects will
                      be subject to bucket-level retention (if any).
                    type: boolean
                  kmsKeyName:
                    description: The resource name of the Cloud KMS key that will
                      be used to encrypt the object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  retention:
                    description: The object retention settings for the object. The
                      retention settings allow an object to be retained until a provided
                      date. Structure is documented below.
                    properties:
                      mode:
                        description: The retention policy mode. Either Locked or Unlocked.
                        type: string
                      retainUntilTime:
                        description: The time to retain the object until in RFC 3339
                          format, for example 2012-11-15T16:19:00.094Z.
                        type: string
                    type: object
                  source:
                    description: |-
                      A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: |-
                      The StorageClass of the new bucket object.
                      Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
                      storage class or to a standard class.
                    type: string
                  temporaryHold:
                    description: Whether an object is under temporary hold. While
                      this flag is set to true, the object is protected against deletion
                      and overwrites.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: BucketObjectStatus defines the observed state of BucketObject.
            properties:
              atProvider:
                properties:
                  bucket:
                    description: The name of the containing bucket.
                    type: string
                  cacheControl:
                    description: |-
                      Cache-Control
                      directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
                    type: string
                  content:
                    description: 'Data as string to be uploaded. Must be defined if
                      source is not. Note: The content field is marked as sensitive.
                      To view the raw contents of the object, please define an output.'
                    type: string
                  contentDisposition:
                    description: Content-Disposition of the object data.
                    type: string
                  contentEncoding:
                    description: Content-Encoding of the object data.
                    type: string
                  contentLanguage:
                    description: Content-Language of the object data.
                    type: string
                  contentType:
                    description: Content-Type of the object data. Defaults to "application/octet-stream"
                      or "text/plain; charset=utf-8".
                    type: string
                  crc32c:
                    description: (Computed) Base 64 CRC32 hash of the uploaded data.
                    type: string
                  customerEncryption:
                    description: |-
                      Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
                      Structure is documented below.
                    properties:
                      encryptionAlgorithm:
                        description: 'Encryption algorithm. Default: AES256'
                        type: string
                    type: object
                  detectMd5Hash:
                    description: 'MD5 hash of the data, encoded using base64. This
                      field is not present for composite objects. For more information
                      about using the MD5 hash, see Hashes and ETags: Best Practices.'
                    type: string
                  eventBasedHold:
                    description: Whether an object is under event-based hold. Event-based
                      hold is a way to retain objects until an event occurs, which
                      is signified by the hold's release (i.e. this value is set to
                      false). After being released (set to false), such objects will
                      be subject to bucket-level retention (if any).
                    type: boolean
                  id:
                    type: string
                  kmsKeyName:
                    description: The resource name of the Cloud KMS key that will
                      be used to encrypt the object.
                    type: string
                  md5hash:
                    description: (Computed) Base 64 MD5 hash of the uploaded data.
                    type: string
                  mediaLink:
                    description: (Computed) A url reference to download this object.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: User-provided metadata, in key/value pairs.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: The name of the object. If you're interpolating the
                      name of this object, see output_name instead.
                    type: string
                  outputName:
                    description: |-
                      (Computed) The name of the object. Use this field in interpolations with google_storage_object_acl to recreate
                      google_storage_object_acl resources when your google_storage_bucket_object is recreated.
                    type: string
                  retention:
                    description: The object retention settings for the object. The
                      retention settings allow an object to be retained until a provided
                      date. Structure is documented below.
                    properties:
                      mode:
                        description: The retention policy mode. Either Locked or Unlocked.
                        type: string
                      retainUntilTime:
                        description: The time to retain the object until in RFC 3339
                          format, for example 2012-11-15T16:19:00.094Z.
                        type: string
                    type: object
                  selfLink:
                    description: (Computed) A url reference to this object.
                    type: string
                  source:
                    description: |-
                      A path to the data you want to upload. Must be defined
                      if content is not.
                    type: string
                  storageClass:
                    description: |-
                      The StorageClass of the new bucket object.
                      Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
                      storage class or to a standard class.
                    type: string
                  temporaryHold:
                    description: Whether an object is under temporary hold. While
                      this flag is set to true, the object is protected against deletion
                      and overwrites.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BucketObject
    listKind: BucketObjectList
    plural: bucketobjects
    singular: bucketobject
  conditions:
  - lastTransitionTime: "2024-07-18T18:16:59Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-07-18T18:16:59Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
